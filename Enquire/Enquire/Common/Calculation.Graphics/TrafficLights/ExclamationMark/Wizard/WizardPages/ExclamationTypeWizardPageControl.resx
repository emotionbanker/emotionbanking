<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bbz/D86kV6tjueETAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2ibaNtlOLtdZzllev3zMTt2OaVdrN2JPt4+2P2Q/4qDmwHSoc3jiqOHIdmxwnHDSc0pwOub0wtnEme/c
        5jznYuOy3uW8K+Lq4Vro2u8m4xbiVun22F3dPc692X3Gw8Jjncd5T7Snt+duz2EvZS+WV6PXzAqrFetX
        9HiTvIO8K72f+Oj78H26fGHfFb57fB+u1FrJW9nhB/y8/Pb4PfLX8U/z/z4AE+AfUBXwNNA0MDewN4gS
        FBXUFPQm2Dm4JPhBiG6IMKQ7VDI0MrQxdC7MNaw0bGSV8ar1q66HK4RzwzsjsBGhEQ0Rs6vdVu9dPR5p
        EVkQObRGZ03WmqtrFdYmrT0TJRnFjDoZjY4Oi26K/sD0Y9YxZ2O8YqpjZlgurH2s52xHdhl7imPHKeVM
        xNrFlsZOxtnF7YmbineIL4+f5rpwK7kvEzwTahLmEv0SjyQuJIUltSbjkqOTT/FkeIm8nhSVlKyUgVSD
        1ILUkTSbtL1pM3xvfkM6lL4mvVNAFf1M9Ql1hVuFoxn2GVUZbzNDM09mSWfxsvqy9bN3ZE/kuOd8vQ61
        jrWuO1ctd3Pu6Hqn9bUboA0xG7o3amzM3zi+yWPT0c2EzYmbf8gzySvNe70lbEtXvnL+pvyxrR5bmwsk
        CvgFw9tst9VsR23nbu/fYb5j/45PhezCa0UmReVFH4pZxde+Mv2q4quFnbE7+0ssSw7uwuzi7Rra7bD7
        aKl0aU7p2B7fPe1l9LLCstd7o/ZeLV9WXrOPsE+4b6TCp6Jzv+b+Xfs/VMZX3qlyrmqtVqreUT13gH1g
        8KDjwZYa5ZqimveHuIfu1nrUttdp15UfxhzOOPy0PrS+92vG140NCg1FDR+P8I6MHA082tNo1djYpNRU
        0gw3C5unjkUeu/mN6zedLYYtta201qLj4Ljw+LNvo78dOuF9ovsk42TLd1rfVbdR2grbofbs9pmO+I6R
        zvDOgVMrTnV32Xa1fW/0/ZHTaqerzsieKTlLOJt/duFczrnZ86nnpy/EXRjrjup+cHHVxds9AT39l7wv
        Xbnsfvlir1PvuSt2V05ftbl66hrjWsd1y+vtfRZ9bT9Y/NDWb9nffsPqRudN65tdA8sHzg46DF645Xrr
        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
</value>
  </data>
</root>